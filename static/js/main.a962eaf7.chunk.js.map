{"version":3,"sources":["assets/Twin-bell-alarm-clock.mp3","timer/Timer.js","preset/Preset.js","app/App.js","serviceWorker.js","timer/TimerReducer.js","preset/PresetReducer.js","index.js"],"names":["module","exports","Timer","props","currentTime","timeLeft","minutesLeft","Math","floor","secondsLeft","toString","padStart","running","className","id","label","onClick","toggle","reset","Preset","decrement","value","increment","timerID","audioRef","tick","dispatch","getState","timer","presets","nextPreset","currentPreset","length","audioPromise","play","undefined","then","console","log","catch","error","type","index","connect","state","clearInterval","setInterval","pausePromise","pause","payload","incrementAction","decrementAction","ref","input","src","soundfile","Boolean","window","location","hostname","match","initialState","timerReducer","action","presetReducer","map","preset","reducer","combineReducers","middleware","applyMiddleware","logger","thunk","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a962eaf7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Twin-bell-alarm-clock.7c531afc.mp3\";","import React from \"react\";\r\nimport \"./Timer.scss\";\r\n\r\nexport default function Timer(props) {\r\n  let currentTime = props.timeLeft;\r\n  let minutesLeft = Math.floor(currentTime / 60);\r\n  let secondsLeft = currentTime % 60;\r\n\r\n  secondsLeft = secondsLeft.toString().padStart(2, \"0\");\r\n  minutesLeft = minutesLeft.toString().padStart(2, \"0\");\r\n\r\n  let styles = props.running ? { color: \"white\" } : { color: \"lightgray\" };\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <div className=\"timer-display\">\r\n        <div id=\"time-left\">{minutesLeft + \":\" + secondsLeft}</div>\r\n        <div id=\"timer-label\">{props.label}</div>\r\n      </div>\r\n      <button id=\"start_stop\" onClick={props.toggle} className=\"\">\r\n        {props.running ? \"Pause\" : \"Play\"}\r\n      </button>\r\n      <button id=\"reset\" onClick={props.reset}>\r\n        Reset\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Preset.scss\";\r\n\r\nexport default function Preset(props) {\r\n  // const paddedValue = props.value.toString().padStart(2, \"0\");\r\n\r\n  return (\r\n    <div className=\"preset-container\">\r\n      <div className=\"arrow\" onClick={props.decrement} id={props.id + \"-decrement\"}>\r\n        ◄\r\n      </div>\r\n      <div className=\"values\">\r\n        <div id={props.id + \"-length\"} className=\"preset-value\">\r\n          {props.value}\r\n        </div>\r\n        <div id={props.id + \"-label\"} className=\"preset-label\">\r\n          {props.label}\r\n        </div>\r\n      </div>\r\n      <div className=\"arrow\" onClick={props.increment} id={props.id + \"-increment\"}>\r\n        ►\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport \"./App.scss\";\nimport Timer from \"../timer/Timer\";\nimport Preset from \"../preset/Preset\";\nimport { connect } from \"react-redux\";\nimport soundfile from \"../assets/Twin-bell-alarm-clock.mp3\";\n\nlet timerID = null;\nlet audioRef = null;\nconst MILLISECONDS = 1000;\n// const MILLISECONDS = 30;\n\nfunction App(props) {\n  return (\n    <div>\n      <h1>POMODORO TIMER</h1>\n      <div className=\"app\">\n        <Preset\n          index={0}\n          id=\"session\"\n          increment={() => props.increment(0)}\n          decrement={() => props.decrement(0)}\n          label={props.presets[0].label}\n          value={props.presets[0].value}\n        />\n        <Preset\n          index={1}\n          id=\"break\"\n          increment={() => props.increment(1)}\n          decrement={() => props.decrement(1)}\n          label={props.presets[1].label}\n          value={props.presets[1].value}\n        />\n        <Timer\n          label={props.label}\n          timeLeft={props.timeLeft}\n          running={props.running}\n          toggle={props.toggle}\n          reset={props.reset}\n        />\n        <audio\n          ref={input => {\n            audioRef = input;\n          }}\n          src={soundfile}\n          id=\"beep\"\n        />\n      </div>\n    </div>\n  );\n}\n\n/* redux-thunk action creator to switch to next preset */\nconst nextPreset = () => {\n  return (dispatch, getState) => {\n    const { timer, presets } = getState();\n    let nextPreset = (timer.currentPreset + 1) % presets.length;\n\n    dispatch({\n      type: \"NEXT_PRESET\",\n      index: nextPreset,\n      timeLeft: presets[nextPreset].value * 60,\n      label: presets[nextPreset].label\n    });\n  };\n};\n\nconst tick = () => {\n  return (dispatch, getState) => {\n    const { timer } = getState();\n    if (timer.timeLeft <= 0) {\n      const { timer, presets } = getState();\n      let nextPreset = (timer.currentPreset + 1) % presets.length;\n      let audioPromise = audioRef.play();\n\n      if (audioPromise !== undefined) {\n        audioPromise\n          .then(() => {\n            console.log(\"RIIIINGG!\");\n          })\n          .catch(error => {\n            console.log(\"audio playback failed: \" + error);\n          });\n      }\n\n      dispatch({\n        type: \"NEXT_PRESET\",\n        index: nextPreset,\n        timeLeft: presets[nextPreset].value * 60,\n        label: presets[nextPreset].label\n      });\n    } else {\n      dispatch({ type: \"TICK\" });\n    }\n  };\n};\n\nconst incrementAction = index => {\n  return (dispatch, getState) => {\n    const { presets, timer } = getState();\n    if (!timer.running && presets[index].value < 60) {\n      /* if it's the first timer being updated, also set the timer's time to match */\n      if (index === 0) {\n        dispatch({ type: \"SET_TIME\", payload: (presets[0].value + 1) * 60 });\n      }\n      dispatch({ type: \"INCREMENT\", id: index });\n    }\n  };\n};\n\nconst decrementAction = index => {\n  return (dispatch, getState) => {\n    const { presets, timer } = getState();\n    if (!timer.running && presets[index].value > 1) {\n      if (index === 0) {\n        dispatch({ type: \"SET_TIME\", payload: (presets[index].value - 1) * 60 });\n      }\n      dispatch({ type: \"DECREMENT\", id: index });\n    }\n  };\n};\n\nconst toggleTimerAction = () => {\n  return (dispatch, getState) => {\n    const { timer } = getState();\n    if (!timer.running) {\n      timerID = setInterval(() => {\n        dispatch(tick());\n      }, MILLISECONDS);\n      dispatch({ type: \"START\" });\n    } else {\n      clearInterval(timerID);\n      dispatch({ type: \"STOP\" });\n    }\n  };\n};\n\nconst resetAction = () => {\n  return (dispatch, getState) => {\n    const { timer } = getState();\n    let pausePromise = audioRef.pause();\n    if (pausePromise !== undefined) {\n      pausePromise\n        .then(() => {\n          console.log(\"stopping audio\");\n        })\n        .catch(error => {\n          console.log(\"error stopping audio: \" + error);\n        });\n    }\n    audioRef.currentTime = 0;\n    // audioRef.load();\n    if (timer.running) {\n      clearInterval(timerID);\n    }\n    dispatch({ type: \"RESET\" });\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    label: state.presets[state.timer.currentPreset].label,\n    timeLeft: state.timer.timeLeft,\n    running: state.timer.running,\n    presets: state.presets\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    tick: () => dispatch(tick()),\n    toggle: () => dispatch(toggleTimerAction()),\n    // start: () => dispatch({ type: \"START\" }),\n    // stop: () => dispatch({ type: \"STOP\" }),\n    reset: () => dispatch(resetAction()),\n    nextPreset: () => dispatch(nextPreset()),\n    increment: index => dispatch(incrementAction(index)),\n    decrement: index => dispatch(decrementAction(index))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const SECONDS = 60;\r\n// const SECONDS = 1;\r\n\r\nconst initialState = {\r\n  label: \"Work\",\r\n  timeLeft: 25 * 60,\r\n  // timeLeft: 5,\r\n  running: false,\r\n  currentPreset: 0\r\n};\r\n\r\nconst timerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TIME\":\r\n      return { ...state, timeLeft: action.payload };\r\n    case \"TICK\":\r\n      return { ...state, timeLeft: state.timeLeft - 1 };\r\n    case \"START\":\r\n      return { ...state, running: true };\r\n    case \"STOP\":\r\n      return { ...state, running: false };\r\n    // case \"INCREMENT\":\r\n    //   if (action.id === 0 && state.timeLeft < 60 * 60) {\r\n    //     return { ...state, timeLeft: state.timeLeft + 60 };\r\n    //   }\r\n    //   return state;\r\n    // case \"DECREMENT\":\r\n    //   if (action.id === 0) {\r\n    //     return { ...state, timeLeft: state.timeLeft - 60 };\r\n    //   }\r\n    //   return state;\r\n    case \"RESET\":\r\n      return {\r\n        ...state,\r\n        timeLeft: initialState.timeLeft,\r\n        running: false,\r\n        currentPreset: 0,\r\n        label: initialState.label\r\n      };\r\n    case \"NEXT_PRESET\":\r\n      return {\r\n        ...state,\r\n        currentPreset: action.index,\r\n        timeLeft: action.timeLeft,\r\n        label: action.label\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default timerReducer;\r\n\r\n/*\r\n  if (action.type === \"PLAY\") {\r\n    return action.time * 60;\r\n  } else if (action.type === \"TICK\") {\r\n    return state - 1;\r\n  } else {\r\n    return state;\r\n  }\r\n\r\n*/\r\n","const initialState = [\r\n  {\r\n    label: \"Work\",\r\n    value: 25\r\n  },\r\n  {\r\n    label: \"Break\",\r\n    value: 5\r\n  }\r\n];\r\n\r\nconst presetReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state.map((preset, index) => {\r\n        if (index === action.id) {\r\n          return { ...preset, value: preset.value + 1 };\r\n        }\r\n        return preset;\r\n      });\r\n      return state;\r\n    case \"DECREMENT\":\r\n      return state.map((preset, index) => {\r\n        if (action.id === index) {\r\n          return { ...preset, value: preset.value - 1 };\r\n        }\r\n        return preset;\r\n      });\r\n      return state;\r\n    case \"RESET\":\r\n      return state.map((preset, index) => {\r\n        return { ...preset, value: initialState[index].value };\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/*\r\nconst initialState = {\r\n  label: \"Work\",\r\n  value: 25\r\n};\r\n\r\nconst presetReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return { ...state, value: state.value + 1 };\r\n    case \"DECREMENT\":\r\n      return { ...state, value: state.value - 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n*/\r\n\r\nexport default presetReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport timerReducer from \"./timer/TimerReducer\";\nimport presetReducer from \"./preset/PresetReducer\";\nimport { logger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\n\nconst reducer = combineReducers({\n  timer: timerReducer,\n  presets: presetReducer\n});\n\nconst middleware = applyMiddleware(logger, thunk);\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}