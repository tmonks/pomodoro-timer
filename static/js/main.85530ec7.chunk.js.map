{"version":3,"sources":["assets/Twin-bell-alarm-clock.mp3","timer/Timer.js","preset/Preset.js","app/App.js","serviceWorker.js","timer/TimerReducer.js","preset/PresetReducer.js","index.js"],"names":["module","exports","Timer","props","strokeLength","Math","PI","strokeOffset","percent","className","width","height","viewBox","cx","displaySize","cy","r","fill","strokeWidth","strokeDasharray","strokeDashoffset","toString","id","label","timeLeft","toggle","icon","running","faPause","faPlay","Preset","activeStyleArrow","cursor","style","active","borderBottom","onClick","decrement","faChevronLeft","value","increment","faChevronRight","timerID","audioRef","formatTime","seconds","minutesLeft","floor","secondsLeft","padStart","tick","dispatch","getState","timer","presets","nextPreset","currentPreset","length","audioPromise","play","undefined","then","console","log","catch","error","type","index","connect","state","startTime","clearInterval","setInterval","reset","pausePromise","pause","currentTime","payload","incrementAction","decrementAction","formattedTimeLeft","useEffect","Helmet","faUndoAlt","ref","input","src","soundfile","Boolean","window","location","hostname","match","initialState","timerReducer","action","presetReducer","map","preset","reducer","combineReducers","middleware","applyMiddleware","logger","thunk","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85530ec7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Twin-bell-alarm-clock.7c531afc.mp3\";","import React from \"react\";\r\nimport \"./Timer.scss\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faPause } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Timer(props) {\r\n  // let styles = props.running ? { color: \"white\" } : { color: \"lightgray\" };\r\n  const displaySize = 200;\r\n  const strokeWidth = 12;\r\n  const strokeLength = displaySize * Math.PI;\r\n  const strokeOffset = strokeLength - strokeLength * (1 - props.percent);\r\n\r\n  return (\r\n    <div className=\"timer-container\">\r\n      <svg\r\n        className=\"progress\"\r\n        width={displaySize}\r\n        height={displaySize}\r\n        viewBox={\"0 0 \" + displaySize + \" \" + displaySize}\r\n      >\r\n        <circle\r\n          className=\"progress-meter\"\r\n          cx={displaySize / 2}\r\n          cy={displaySize / 2}\r\n          r={(displaySize - strokeWidth) / 2}\r\n          fill=\"none\"\r\n          strokeWidth={strokeWidth - 2}\r\n        />\r\n        <circle\r\n          className=\"progress-value\"\r\n          cx={displaySize / 2}\r\n          cy={displaySize / 2}\r\n          r={(displaySize - strokeWidth) / 2}\r\n          fill=\"none\"\r\n          strokeWidth={strokeWidth}\r\n          strokeDasharray={strokeLength}\r\n          strokeDashoffset={strokeOffset.toString()}\r\n        />\r\n      </svg>\r\n      <div className=\"timer-display\">\r\n        <div id=\"timer-label\">{props.label}</div>\r\n        <div id=\"time-left\">{props.timeLeft}</div>\r\n        <div id=\"start_stop\" id=\"start_stop\" onClick={props.toggle}>\r\n          <FontAwesomeIcon icon={props.running ? faPause : faPlay} />\r\n        </div>\r\n      </div>\r\n      {/* <button id=\"start_stop\" onClick={props.toggle} className=\"\">\r\n        {props.running ? \"Pause\" : \"Play\"}\r\n      </button>\r\n      <button id=\"reset\" onClick={props.reset}>\r\n        Reset\r\n  </button> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Preset.scss\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCaretSquareLeft,\r\n  faCaretSquareRight,\r\n  faCaretLeft,\r\n  faCaretRight,\r\n  faChevronCircleLeft,\r\n  faChevronCircleRight,\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faAngleLeft,\r\n  faAngleRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Preset(props) {\r\n  // const paddedValue = props.value.toString().padStart(2, \"0\");\r\n\r\n  const activeStyleContainer = {\r\n    borderBottom: \"4px solid #29a4b5\"\r\n  };\r\n\r\n  const activeStyleArrow = {\r\n    cursor: \"default\"\r\n    // opacity: 0.25\r\n  };\r\n\r\n  return (\r\n    <div className=\"preset-container\" style={props.active ? activeStyleContainer : null}>\r\n      <div\r\n        className=\"arrow\"\r\n        onClick={props.active ? null : props.decrement}\r\n        id={props.id + \"-decrement\"}\r\n        style={props.active ? activeStyleArrow : null}\r\n      >\r\n        <FontAwesomeIcon icon={faChevronLeft} />\r\n      </div>\r\n      <div className=\"values\">\r\n        <div id={props.id + \"-length\"} className=\"preset-value\">\r\n          {props.value}\r\n        </div>\r\n        <div id={props.id + \"-label\"} className=\"preset-label\">\r\n          {props.label}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"arrow\"\r\n        onClick={props.active ? null : props.increment}\r\n        id={props.id + \"-increment\"}\r\n        style={props.active ? activeStyleArrow : null}\r\n      >\r\n        <FontAwesomeIcon icon={faChevronRight} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport \"./App.scss\";\nimport Timer from \"../timer/Timer\";\nimport Preset from \"../preset/Preset\";\nimport { connect } from \"react-redux\";\nimport soundfile from \"../assets/Twin-bell-alarm-clock.mp3\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlayCircle, faPauseCircle, faUndoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Helmet } from \"react-helmet\";\n\nlet timerID = null;\nlet audioRef = null;\nconst MILLISECONDS = 1000;\n// const MILLISECONDS = 30;\n\nconst formatTime = seconds => {\n  let minutesLeft = Math.floor(seconds / 60);\n  let secondsLeft = seconds % 60;\n\n  secondsLeft = secondsLeft.toString().padStart(2, \"0\");\n  minutesLeft = minutesLeft.toString().padStart(2, \"0\");\n  return minutesLeft + \":\" + secondsLeft;\n};\n\nfunction App(props) {\n  const formattedTimeLeft = formatTime(props.timeLeft);\n  const percent = props.timeLeft / props.startTime;\n\n  /* clear interval on unmount */\n  useEffect(() => {\n    return () => {\n      clearInterval(timerID);\n    };\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Helmet>\n        <title>{props.running ? props.label + \": \" + formattedTimeLeft : \"Pomodoro Timer\"}</title>\n      </Helmet>\n      <h1>POMODORO TIMER</h1>\n      <div className=\"presets\">\n        <Preset\n          index={0}\n          id=\"session\"\n          increment={() => props.increment(0)}\n          decrement={() => props.decrement(0)}\n          label={props.presets[0].label}\n          value={props.presets[0].value}\n          active={props.running && props.currentPreset == 0}\n        />\n        {/* <button id=\"reset\" onClick={props.reset}>\n            Reset\n          </button> */}\n        <Preset\n          index={1}\n          id=\"break\"\n          increment={() => props.increment(1)}\n          decrement={() => props.decrement(1)}\n          label={props.presets[1].label}\n          value={props.presets[1].value}\n          active={props.running && props.currentPreset == 1}\n        />\n      </div>\n      <Timer\n        label={props.label}\n        timeLeft={formattedTimeLeft}\n        running={props.running}\n        toggle={props.toggle}\n        reset={props.reset}\n        percent={percent}\n      />\n      <div id=\"reset\" onClick={props.reset}>\n        <FontAwesomeIcon icon={faUndoAlt} />\n      </div>\n      {/* <FontAwesomeIcon\n          id=\"start_stop\"\n          onClick={props.toggle}\n          icon={props.running ? faPauseCircle : faPlayCircle}\n        /> */}\n      {/* <button id=\"start_stop\" onClick={props.toggle}>\n          {props.running ? \"Pause\" : \"Play\"}\n        </button> */}\n      <audio\n        ref={input => {\n          audioRef = input;\n        }}\n        src={soundfile}\n        id=\"beep\"\n      />\n    </div>\n  );\n}\n\n/* redux-thunk action creator to switch to next preset */\nconst nextPreset = () => {\n  return (dispatch, getState) => {\n    const { timer, presets } = getState();\n    let nextPreset = (timer.currentPreset + 1) % presets.length;\n\n    dispatch({\n      type: \"NEXT_PRESET\",\n      index: nextPreset,\n      timeLeft: presets[nextPreset].value * 60,\n      label: presets[nextPreset].label\n    });\n  };\n};\n\nconst tick = () => {\n  return (dispatch, getState) => {\n    const { timer } = getState();\n    if (timer.timeLeft <= 0) {\n      const { timer, presets } = getState();\n      let nextPreset = (timer.currentPreset + 1) % presets.length;\n      let audioPromise = audioRef.play();\n\n      if (audioPromise !== undefined) {\n        audioPromise\n          .then(() => {\n            console.log(\"RIIIINGG!\");\n          })\n          .catch(error => {\n            console.log(\"audio playback failed: \" + error);\n          });\n      }\n\n      dispatch({\n        type: \"NEXT_PRESET\",\n        index: nextPreset,\n        timeLeft: presets[nextPreset].value * 60,\n        label: presets[nextPreset].label\n      });\n    } else {\n      dispatch({ type: \"TICK\" });\n    }\n  };\n};\n\nconst incrementAction = index => {\n  return (dispatch, getState) => {\n    const { presets, timer } = getState();\n    if (presets[index].value < 60) {\n      /* if it's the current timer being updated, also set the timer's time to match */\n      if (index === timer.currentPreset) {\n        dispatch({ type: \"SET_TIME\", payload: (presets[index].value + 1) * 60 });\n      }\n      dispatch({ type: \"INCREMENT\", id: index });\n    }\n  };\n};\n\nconst decrementAction = index => {\n  return (dispatch, getState) => {\n    const { presets, timer } = getState();\n    if (presets[index].value > 1) {\n      /* if it's the current timer being updated, also set the timer's time to match */\n      if (index === timer.currentPreset) {\n        dispatch({ type: \"SET_TIME\", payload: (presets[index].value - 1) * 60 });\n      }\n      dispatch({ type: \"DECREMENT\", id: index });\n    }\n  };\n};\n\nconst toggleTimerAction = () => {\n  return (dispatch, getState) => {\n    const { timer } = getState();\n    if (!timer.running) {\n      timerID = setInterval(() => {\n        dispatch(tick());\n      }, MILLISECONDS);\n      dispatch({ type: \"START\" });\n    } else {\n      clearInterval(timerID);\n      dispatch({ type: \"STOP\" });\n    }\n  };\n};\n\nconst resetAction = () => {\n  return (dispatch, getState) => {\n    const { timer } = getState();\n    let pausePromise = audioRef.pause();\n    if (pausePromise !== undefined) {\n      pausePromise\n        .then(() => {\n          console.log(\"stopping audio\");\n        })\n        .catch(error => {\n          console.log(\"error stopping audio: \" + error);\n        });\n    }\n    audioRef.currentTime = 0;\n    // audioRef.load();\n    if (timer.running) {\n      clearInterval(timerID);\n    }\n    dispatch({ type: \"RESET\" });\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    label: state.presets[state.timer.currentPreset].label,\n    startTime: state.presets[state.timer.currentPreset].value * 60,\n    timeLeft: state.timer.timeLeft,\n    running: state.timer.running,\n    presets: state.presets,\n    currentPreset: state.timer.currentPreset\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    tick: () => dispatch(tick()),\n    toggle: () => dispatch(toggleTimerAction()),\n    // start: () => dispatch({ type: \"START\" }),\n    // stop: () => dispatch({ type: \"STOP\" }),\n    reset: () => dispatch(resetAction()),\n    nextPreset: () => dispatch(nextPreset()),\n    increment: index => dispatch(incrementAction(index)),\n    decrement: index => dispatch(decrementAction(index))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const SECONDS = 60;\r\n// const SECONDS = 1;\r\n\r\nconst initialState = {\r\n  label: \"Work\",\r\n  timeLeft: 25 * 60,\r\n  // timeLeft: 5,\r\n  running: false,\r\n  currentPreset: 0\r\n};\r\n\r\nconst timerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TIME\":\r\n      return { ...state, timeLeft: action.payload };\r\n    case \"TICK\":\r\n      return { ...state, timeLeft: state.timeLeft - 1 };\r\n    case \"START\":\r\n      return { ...state, running: true };\r\n    case \"STOP\":\r\n      return { ...state, running: false };\r\n    // case \"INCREMENT\":\r\n    //   if (action.id === 0 && state.timeLeft < 60 * 60) {\r\n    //     return { ...state, timeLeft: state.timeLeft + 60 };\r\n    //   }\r\n    //   return state;\r\n    // case \"DECREMENT\":\r\n    //   if (action.id === 0) {\r\n    //     return { ...state, timeLeft: state.timeLeft - 60 };\r\n    //   }\r\n    //   return state;\r\n    case \"RESET\":\r\n      return {\r\n        ...state,\r\n        timeLeft: initialState.timeLeft,\r\n        running: false,\r\n        currentPreset: 0,\r\n        label: initialState.label\r\n      };\r\n    case \"NEXT_PRESET\":\r\n      return {\r\n        ...state,\r\n        currentPreset: action.index,\r\n        timeLeft: action.timeLeft,\r\n        label: action.label\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default timerReducer;\r\n\r\n/*\r\n  if (action.type === \"PLAY\") {\r\n    return action.time * 60;\r\n  } else if (action.type === \"TICK\") {\r\n    return state - 1;\r\n  } else {\r\n    return state;\r\n  }\r\n\r\n*/\r\n","const initialState = [\r\n  {\r\n    label: \"Work\",\r\n    value: 25 \r\n  },\r\n  {\r\n    label: \"Break\",\r\n    value: 5\r\n  }\r\n];\r\n\r\nconst presetReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state.map((preset, index) => {\r\n        if (index === action.id) {\r\n          return { ...preset, value: preset.value + 1 };\r\n        }\r\n        return preset;\r\n      });\r\n      return state;\r\n    case \"DECREMENT\":\r\n      return state.map((preset, index) => {\r\n        if (action.id === index) {\r\n          return { ...preset, value: preset.value - 1 };\r\n        }\r\n        return preset;\r\n      });\r\n      return state;\r\n    case \"RESET\":\r\n      return state.map((preset, index) => {\r\n        return { ...preset, value: initialState[index].value };\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/*\r\nconst initialState = {\r\n  label: \"Work\",\r\n  value: 25\r\n};\r\n\r\nconst presetReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return { ...state, value: state.value + 1 };\r\n    case \"DECREMENT\":\r\n      return { ...state, value: state.value - 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n*/\r\n\r\nexport default presetReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport timerReducer from \"./timer/TimerReducer\";\nimport presetReducer from \"./preset/PresetReducer\";\nimport { logger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\n\nconst reducer = combineReducers({\n  timer: timerReducer,\n  presets: presetReducer\n});\n\nconst middleware = applyMiddleware(logger, thunk);\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}